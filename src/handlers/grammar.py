from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
import logging

logger = logging.getLogger(__name__)

GRAMMAR_TOPICS = {
    'present': {
        'title': 'Present Simple',
        'description': '–ù–∞—Å—Ç–æ—è—â–µ–µ –ø—Ä–æ—Å—Ç–æ–µ –≤—Ä–µ–º—è',
        'rules': [
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ñ–∞–∫—Ç–æ–≤",
            "–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è I/You/We/They: –≥–ª–∞–≥–æ–ª –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π",
            "–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è He/She/It: –≥–ª–∞–≥–æ–ª + s",
            "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞: don't/doesn't + –≥–ª–∞–≥–æ–ª",
            "–í–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞: Do/Does + –ø–æ–¥–ª–µ–∂–∞—â–µ–µ + –≥–ª–∞–≥–æ–ª"
        ],
        'examples': [
            "I play football. - –Ø –∏–≥—Ä–∞—é –≤ —Ñ—É—Ç–±–æ–ª.",
            "She plays tennis. - –û–Ω–∞ –∏–≥—Ä–∞–µ—Ç –≤ —Ç–µ–Ω–Ω–∏—Å.",
            "They don't like pizza. - –û–Ω–∏ –Ω–µ –ª—é–±—è—Ç –ø–∏—Ü—Ü—É.",
            "Does he speak English? - –û–Ω –≥–æ–≤–æ—Ä–∏—Ç –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏?"
        ]
    },
    'have': {
        'title': 'Have/Has got',
        'description': '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏',
        'rules': [
            "I/You/We/They have got - –£ –º–µ–Ω—è/—Ç–µ–±—è/–Ω–∞—Å/–∏—Ö –µ—Å—Ç—å",
            "He/She/It has got - –£ –Ω–µ–≥–æ/–Ω–µ—ë/—ç—Ç–æ–≥–æ –µ—Å—Ç—å",
            "–û—Ç—Ä–∏—Ü–∞–Ω–∏–µ: haven't got / hasn't got",
            "–í–æ–ø—Ä–æ—Å: Have/Has + –ø–æ–¥–ª–µ–∂–∞—â–µ–µ + got?"
        ],
        'examples': [
            "I have got a dog. - –£ –º–µ–Ω—è –µ—Å—Ç—å —Å–æ–±–∞–∫–∞.",
            "She has got a cat. - –£ –Ω–µ—ë –µ—Å—Ç—å –∫–æ—à–∫–∞.",
            "They haven't got a car. - –£ –Ω–∏—Ö –Ω–µ—Ç –º–∞—à–∏–Ω—ã.",
            "Has he got a brother? - –£ –Ω–µ–≥–æ –µ—Å—Ç—å –±—Ä–∞—Ç?"
        ]
    },
    'possessive': {
        'title': '–ü—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è',
        'description': '–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å',
        'rules': [
            "my - –º–æ–π/–º–æ—è/–º–æ—ë/–º–æ–∏",
            "your - —Ç–≤–æ–π/–≤–∞—à",
            "his - –µ–≥–æ",
            "her - –µ—ë",
            "its - –µ–≥–æ/–µ—ë (–¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤)",
            "our - –Ω–∞—à",
            "their - –∏—Ö"
        ],
        'examples': [
            "This is my book. - –≠—Ç–æ –º–æ—è –∫–Ω–∏–≥–∞.",
            "Her name is Ann. - –ï—ë –∑–æ–≤—É—Ç –ê–Ω–Ω–∞.",
            "Their house is big. - –ò—Ö –¥–æ–º –±–æ–ª—å—à–æ–π."
        ]
    },
    'plurals': {
        'title': '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ',
        'description': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö',
        'rules': [
            "–û–±—ã—á–Ω–æ: –¥–æ–±–∞–≤–ª—è–µ–º -s (cat - cats)",
            "–ü–æ—Å–ª–µ -s, -ss, -ch, -sh, -x: –¥–æ–±–∞–≤–ª—è–µ–º -es (box - boxes)",
            "–ï—Å–ª–∏ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–æ–≥–ª–∞—Å–Ω—É—é + y: y ‚Üí i + es (baby - babies)",
            "–ï—Å–ª–∏ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞—Å–Ω—É—é + y: –ø—Ä–æ—Å—Ç–æ + s (toy - toys)",
            "–û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏: child - children, man - men, woman - women"
        ],
        'examples': [
            "One dog, two dogs - –û–¥–Ω–∞ —Å–æ–±–∞–∫–∞, –¥–≤–µ —Å–æ–±–∞–∫–∏",
            "One box, two boxes - –û–¥–Ω–∞ –∫–æ—Ä–æ–±–∫–∞, –¥–≤–µ –∫–æ—Ä–æ–±–∫–∏",
            "One baby, two babies - –û–¥–∏–Ω –º–∞–ª—ã—à, –¥–≤–∞ –º–∞–ª—ã—à–∞",
            "One toy, two toys - –û–¥–Ω–∞ –∏–≥—Ä—É—à–∫–∞, –¥–≤–µ –∏–≥—Ä—É—à–∫–∏"
        ]
    },
    'prepositions': {
        'title': '–ü—Ä–µ–¥–ª–æ–≥–∏ –º–µ—Å—Ç–∞',
        'description': '–ü—Ä–µ–¥–ª–æ–≥–∏, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤',
        'rules': [
            "in - –≤, –≤–Ω—É—Ç—Ä–∏",
            "on - –Ω–∞ (–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏)",
            "under - –ø–æ–¥",
            "behind - –∑–∞, –ø–æ–∑–∞–¥–∏",
            "in front of - –ø–µ—Ä–µ–¥",
            "between - –º–µ–∂–¥—É",
            "next to - —Ä—è–¥–æ–º —Å"
        ],
        'examples': [
            "The book is in the bag. - –ö–Ω–∏–≥–∞ –≤ —Å—É–º–∫–µ.",
            "The cat is on the table. - –ö–æ—à–∫–∞ –Ω–∞ —Å—Ç–æ–ª–µ.",
            "The ball is under the chair. - –ú—è—á –ø–æ–¥ —Å—Ç—É–ª–æ–º.",
            "The tree is behind the house. - –î–µ—Ä–µ–≤–æ –∑–∞ –¥–æ–º–æ–º."
        ]
    },
    'this': {
        'title': 'This/That/These/Those',
        'description': '–£–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è',
        'rules': [
            "this - —ç—Ç–æ—Ç/—ç—Ç–∞/—ç—Ç–æ (–±–ª–∏–∑–∫–æ)",
            "that - —Ç–æ—Ç/—Ç–∞/—Ç–æ (–¥–∞–ª–µ–∫–æ)",
            "these - —ç—Ç–∏ (–º–Ω–æ–∂. —á–∏—Å–ª–æ, –±–ª–∏–∑–∫–æ)",
            "those - —Ç–µ (–º–Ω–æ–∂. —á–∏—Å–ª–æ, –¥–∞–ª–µ–∫–æ)"
        ],
        'examples': [
            "This is my pen. - –≠—Ç–æ –º–æ—è —Ä—É—á–∫–∞.",
            "That is his house. - –¢–æ –µ–≥–æ –¥–æ–º.",
            "These are my books. - –≠—ÇÔøΩÔøΩ –º–æ–∏ –∫–Ω–∏–≥–∏.",
            "Those are their toys. - –¢–æ –∏—Ö –∏–≥—Ä—É—à–∫–∏."
        ]
    },
    'can': {
        'title': 'Can/Can\'t',
        'description': '–ú–æ–¥–∞–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏/—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏',
        'rules': [
            "Can - –º–æ—á—å, —É–º–µ—Ç—å (—É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞)",
            "Can't/Cannot - –Ω–µ –º–æ—á—å, –Ω–µ —É–º–µ—Ç—å (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞)",
            "Can...? - –º–æ—á—å, —É–º–µ—Ç—å (–≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞)",
            "–ù–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ø–æ –ª–∏—Ü–∞–º –∏ —á–∏—Å–ª–∞–º"
        ],
        'examples': [
            "I can swim. - –Ø —É–º–µ—é –ø–ª–∞–≤–∞—Ç—å.",
            "He can't fly. - –û–Ω –Ω–µ –º–æ–∂–µ—Ç –ª–µ—Ç–∞—Ç—å.",
            "Can you dance? - –¢—ã —É–º–µ–µ—à—å —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å?",
            "Yes, I can. / No, I can't. - –î–∞, —É–º–µ—é. / –ù–µ—Ç, –Ω–µ —É–º–µ—é."
        ]
    },
    'imperative': {
        'title': '–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏–µ',
        'description': '–ö–æ–º–∞–Ω–¥—ã –∏ –ø—Ä–æ—Å—å–±—ã',
        'rules': [
            "–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞: –≥–ª–∞–≥–æ–ª –≤ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ",
            "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞: Don't + –≥–ª–∞–≥–æ–ª",
            "Please –¥–ª—è –≤–µ–∂–ª–∏–≤–æ–π –ø—Ä–æ—Å—å–±—ã",
            "Let's –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        ],
        'examples': [
            "Open the door! - –û—Ç–∫—Ä–æ–π –¥–≤–µ—Ä—å!",
            "Don't run! - –ù–µ –±–µ–≥–∞–π!",
            "Please, help me. - –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–æ–≥–∏ –º–Ω–µ.",
            "Let's play! - –î–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å!"
        ]
    }
}

async def handle_grammar(update: Update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏"""
    query = update.callback_query
    await query.answer()

    try:
        keyboard = []
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º—ã
        for topic_id, topic_data in GRAMMAR_TOPICS.items():
            keyboard.append([
                InlineKeyboardButton(
                    topic_data['title'],
                    callback_data=f"grammar_{topic_id}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ—Ñ–∏–∫—Å grammar_
                )
            ])

        keyboard.append([InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.message.edit_text(
            "üìù –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:",
            reply_markup=reply_markup
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏: {e}")
        await query.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

async def show_grammar_topic(update: Update, context, topic_id: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ç–µ–º—É"""
    query = update.callback_query
    await query.answer()

    try:
        topic_data = GRAMMAR_TOPICS.get(topic_id)
        if not topic_data:
            logger.error(f"–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {topic_id}")
            await query.message.edit_text(
                "–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("üîô –ö —Ç–µ–º–∞–º", callback_data="grammar")
                ]])
            )
            return

        text = f"üìù {topic_data['title']}\n\n"
        text += f"‚ÑπÔ∏è {topic_data['description']}\n\n"
        
        text += "üìö –ü—Ä–∞–≤–∏–ª–∞:\n"
        for rule in topic_data['rules']:
            text += f"‚Ä¢ {rule}\n"
        
        text += "\n‚úèÔ∏è –ü—Ä–∏–º–µ—Ä—ã:\n"
        for example in topic_data['examples']:
            text += f"‚Ä¢ {example}\n"

        keyboard = [
            [InlineKeyboardButton("‚úçÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", callback_data=f"grammar_{topic_id}_exercise")],
            [InlineKeyboardButton("üîô –ö —Ç–µ–º–∞–º", callback_data="grammar")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.edit_text(text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º—ã: {e}")
        await query.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

async def handle_grammar_exercise(update: Update, context, topic_id: str):
    logger.info(f"–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ: {topic_id}")
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º–µ"""
    topic_data = GRAMMAR_TOPICS.get(topic_id)
    if not topic_data or 'exercises' not in topic_data:
        return
    
    current_exercise = context.user_data.get('current_exercise', 0)
    exercise = topic_data['exercises'][current_exercise]
    
    text = f"‚úçÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ {current_exercise + 1}\n\n"
    text += f"–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ–ø—É—Å–∫:\n{exercise['question']}"
    
    keyboard = [
        [InlineKeyboardButton("üîç –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç", callback_data=f"grammar_{topic_id}_answer")],
        [InlineKeyboardButton("üîô –ö —Ç–µ–æ—Ä–∏–∏", callback_data=f"grammar_{topic_id}")]
    ]
    
    if len(topic_data['exercises']) > 1:
        nav_buttons = []
        if current_exercise > 0:
            nav_buttons.append(
                InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ", callback_data=f"grammar_{topic_id}_prev")
            )
        if current_exercise < len(topic_data['exercises']) - 1:
            nav_buttons.append(
                InlineKeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–µ–µ", callback_data=f"grammar_{topic_id}_next")
            )
        keyboard.insert(0, nav_buttons)
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.callback_query.edit_message_text(text, reply_markup=reply_markup) 