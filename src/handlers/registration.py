from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    CallbackContext
)

WAITING_NAME = 1

async def start_registration(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    db = context.application.bot_data['db']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if db.user_exists(user_id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üìö –ú–æ–¥—É–ª–∏", callback_data="modules"),
             InlineKeyboardButton("üìñ –°–ª–æ–≤–∞—Ä—å", callback_data="dictionary")],
            [InlineKeyboardButton("üìù –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞", callback_data="grammar"),
             InlineKeyboardButton("‚úèÔ∏è –ü—Ä–∞–∫—Ç–∏–∫–∞", callback_data="practice")],
            [InlineKeyboardButton("üéÆ –ò–≥—Ä—ã", callback_data="games"),
             InlineKeyboardButton("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="progress")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Spotlight 3 Helper!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:",
            reply_markup=reply_markup
        )
        return ConversationHandler.END
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await update.message.reply_text("–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        return WAITING_NAME

async def process_name(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    first_name = update.message.text
    username = update.effective_user.username
    
    db = context.application.bot_data['db']
    
    try:
        db.add_user(user_id, username, first_name)
        
        # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üìö –ú–æ–¥—É–ª–∏", callback_data="modules"),
             InlineKeyboardButton("üìñ –°–ª–æ–≤–∞—Ä—å", callback_data="dictionary")],
            [InlineKeyboardButton("üìù –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞", callback_data="grammar"),
             InlineKeyboardButton("‚úèÔ∏è –ü—Ä–∞–∫—Ç–∏–∫–∞", callback_data="practice")],
            [InlineKeyboardButton("üéÆ –ò–≥—Ä—ã", callback_data="games"),
             InlineKeyboardButton("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="progress")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {first_name}!\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Spotlight 3 Helper!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:",
            reply_markup=reply_markup
        )
        return ConversationHandler.END
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ "
            "—Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start"
        )
        return ConversationHandler.END

def get_registration_handler():
    return ConversationHandler(
        entry_points=[CommandHandler('start', start_registration)],
        states={
            WAITING_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_name)]
        },
        fallbacks=[CommandHandler('start', start_registration)]
    )